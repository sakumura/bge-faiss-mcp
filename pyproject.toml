[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bge-faiss-mcp"
version = "1.0.7"
description = "High-performance semantic search MCP server using BGE-M3 embeddings and FAISS vector store"
authors = [
    {name = "AI Dev Companion Project", email = "your-email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10,<3.13"
keywords = ["mcp", "semantic-search", "bge", "faiss", "embeddings", "vector-search"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Indexing",
]

dependencies = [
    "mcp>=1.12.0",
    "sentence-transformers>=5.1.0",
    "faiss-cpu>=1.8.0",
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "transformers>=4.45.0",
    "numpy>=1.26.0",
    "python-dotenv>=1.1.0",
    "pydantic>=2.11.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
gpu = [
    "faiss-gpu>=1.7.2",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
all = [
    "bge-faiss-mcp[gpu,dev]"
]

[project.urls]
Homepage = "https://github.com/sakumura/bge-faiss-mcp"
Repository = "https://github.com/sakumura/bge-faiss-mcp"
Documentation = "https://github.com/sakumura/bge-faiss-mcp/blob/main/README.md"
"Bug Tracker" = "https://github.com/sakumura/bge-faiss-mcp/issues"

[project.scripts]
bge-faiss-mcp = "bge_faiss_mcp.server:main"

[tool.hatch.version]
path = "src/bge_faiss_mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/bge_faiss_mcp"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--cov=bge_faiss_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# Platform-specific PyTorch selection (temporarily disabled for v1.0.7)
# Using standard PyPI packages to ensure compatibility
# [tool.uv.sources]
# torch = [
#     { index = "pytorch-cu118", marker = "sys_platform == 'win32'" },    # Windows: CUDA 11.8
#     { index = "pytorch-cpu", marker = "sys_platform == 'darwin'" },     # macOS: CPU only (MPS via CPU build)
#     { index = "pytorch-cu118", marker = "sys_platform == 'linux'" },    # Linux: CUDA 11.8
# ]
# torchvision = [
#     { index = "pytorch-cu118", marker = "sys_platform == 'win32'" },    # Windows: CUDA 11.8
#     { index = "pytorch-cpu", marker = "sys_platform == 'darwin'" },     # macOS: CPU only
#     { index = "pytorch-cu118", marker = "sys_platform == 'linux'" },    # Linux: CUDA 11.8
# ]
#
# # PyTorch index definitions
# [[tool.uv.index]]
# name = "pytorch-cpu"
# url = "https://download.pytorch.org/whl/cpu"
# explicit = true
#
# [[tool.uv.index]]
# name = "pytorch-cu118"
# url = "https://download.pytorch.org/whl/cu118"
# explicit = true